@model MqttHome.MqttHomeController

<div class="panel panel-default">
    <div class="panel-heading">
        Rules
        <a class="btn btn-xs btn-default" href="/editor/index/rules.json">Edit Rules</a>
    </div>
    <div class="panel-body">
        @if (!Model.RuleEngineEnabled)
        {
            <div class="alert alert-warning">The rule engine is DISABLED in appsettings.json</div>
        }

        @if (Model.RuleEngine.RuleConfig.Defaults.Any())
        {
        <div class="panel panel-default">
            <div class="panel-heading">Defaults</div>
            <div class="panel-body">
                @if (Model.RuleEngine.RuleConfig.Defaults.FlipFlop.HasValue)
                {
                    <div>
                        <label>Flip Flop</label>
                        @Model.RuleEngine.RuleConfig.Defaults.FlipFlop
                    </div>
                }

                @if (Model.RuleEngine.RuleConfig.Defaults.ConditionsOr?.Any() ?? false)
                {
                    <div>
                        <label>Condition OR</label>
                        @Html.Raw(string.Join("<br />", Model.RuleEngine.RuleConfig.Defaults.ConditionsOr))
                    </div>
                }

                @if (Model.RuleEngine.RuleConfig.Defaults.ConditionsAnd?.Any() ?? false)
                {
                    <div>
                        <label>Condition AND</label>
                        @Html.Raw(string.Join("<br />", Model.RuleEngine.RuleConfig.Defaults.ConditionsAnd))
                    </div>
                }
            </div>
        </div>
        }

        @foreach (var rule in Model.RuleEngine.RuleConfig.Rules)
        {
            <div class="col-sm-4 col-lg-3">

                <div class="panel panel-info">
                    <div class="panel-heading">@rule.Name</div>
                    <div class="panel-body">
                        <div>
                            <label>Description</label>
                            @rule.Description
                        </div>
                        <div>
                            <label>Switch</label>
                            @rule.Switch
                        </div>
                        @if (rule.ConditionsOr?.Any() ?? false)
                        {
                            <div>
                                <label>OR Condition(s)</label>
                            </div>

                            @foreach (var condition in rule.ConditionsOr)
                            {
                                var conditionValue = @Model.RuleEngine.ConditionConfig.Conditions.First(c => c.Id == condition).ConditionValue ?? false;
                                <div>
                                    @condition
                                    <span class="label label-@(conditionValue ? "success" : "danger")">@conditionValue</span>
                                </div>
                            }
                        }

                        @if (rule.ConditionsAnd?.Any() ?? false)
                        {
                            <div>
                                <label>AND Condition(s)</label>
                            </div>

                            @foreach (var condition in rule.ConditionsAnd)
                            {
                                var conditionValue = @Model.RuleEngine.ConditionConfig.Conditions.First(c => c.Id == condition).ConditionValue ?? false;
                                <div>
                                    @condition
                                    <span class="label label-@(conditionValue ? "success" : "danger")">@conditionValue</span>
                                </div>
                            }

                        }

                        <div>
                            <label>Flip Flop</label>
                            @rule.FlipFlop
                        </div>
                        <div>
                            <label>Last State</label>
                            @(rule.State.HasValue ? rule.State.ToString() : "n/a")
                        </div>
                        <div>
                            <label>Last State Change</label>
                            @rule.StateChanged.GetPrettyDateHtml()
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>
