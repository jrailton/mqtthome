@using MqttHome.Mqtt.Devices
@model MqttHome.MqttHomeController
<div class="panel panel-default" id="switch-devices">
    <div class="panel-heading">
        Switch Devices
        <a class="btn btn-xs btn-default" href="/editor/index/devices.json">Edit Devices</a>
    </div>
    <div class="panel-body">

        @foreach (var device in Model.MqttDevices.Where(d => d is IStatefulDevice))
        {
            var stateful = device as IStatefulDevice;
            <div class="col-sm-4 col-lg-3">
                <div class="panel panel-@(stateful.PowerOn.HasValue ? (stateful.PowerOn.Value ? "success" : "danger") : "default")">
                    <div class="panel-heading">
                        @if (device.LastMqttMessage.HasValue)
                        {
                            @if (stateful.PowerOn ?? true)
                            {
                                <button class="btn btn-primary btn-xs btn-danger pull-right" onclick="SwitchOff('@device.Id')">Switch Off</button>
                            }
                            else
                            {
                                <button class="btn btn-primary btn-xs btn-success pull-right" onclick="SwitchOn('@device.Id')">Switch On</button>
                            }
                        }
                        else
                        {
                            <button class="btn btn-default btn-xs disabled pull-right">Unavailable</button>
                        }
                        <a role="button" data-toggle="collapse" data-parent="#switch-devices" href="#collapse-switch-@device.Id.UrlReady()" aria-expanded="false" aria-controls="collapse-switch-@device.Id.UrlReady()">
                            @device.FriendlyName
                        </a>
                        <div class="clearfix"></div>
                    </div>
                    <div id="collapse-switch-@device.Id.UrlReady()" class="panel-collapse collapse">

                        <div class="panel-body">
                            <div>
                                <label>Last Contact</label>
                                @device.LastMqttMessage.GetPrettyDateHtml()
                            </div>
                            <div>
                                <label>State History</label>
                                <pre class="small">@string.Join(Environment.NewLine, stateful.StateHistory.Select(h => $"{h.Key.ToString("HH:mm:ss")} {h.Value}"))</pre>
                            </div>
                            <div>
                                <label>State Query</label>
                                @stateful.StateQuery
                            </div>
                            <div class="technical">
                                <label>Class</label>
                                @device.DeviceClass
                            </div>
                            <div class="technical">
                                <label>Type</label>
                                @device.DeviceType
                            </div>
                            <div class="technical">
                                <label>ID</label>
                                @device.Id
                            </div>
                            <div class="technical">
                                <label>MQTT Topics</label>
                                @Html.Raw(string.Join("<br />", device.AllTopics))
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>