
@{
    ViewData["Title"] = "JSON Editor";

    if (!string.IsNullOrEmpty(ViewBag.Filename))
        ViewData["Title"] += " - " + ViewBag.Filename;
}
<br />
<div class="well">
    Files:
    @foreach (var filename in System.IO.Directory.GetFiles(Program.RootFolderPath, "*.json"))
    {
        <div class="btn-group">
            <a class="btn btn-xs btn-default" title="Edit this file" href="/editor/index/@System.IO.Path.GetFileName(filename)">@System.IO.Path.GetFileName(filename)</a>
            <a class="btn btn-xs btn-danger" title="Delete this file" onclick="return confirm('Are you sure you want to delete @System.IO.Path.GetFileName(filename)?');" href="/editor/delete/@System.IO.Path.GetFileName(filename)">×</a>
        </div>
    }
</div>

@if (!string.IsNullOrEmpty(ViewBag.Filename))
{
    <div class="alert alert-info">Currently editing <strong>@ViewBag.Filename</strong></div>
}
else
{
    <div class="alert alert-info">Choose one of the files above to edit</div>
}

@if (!string.IsNullOrEmpty(ViewBag.Filename))
{
    <form method="post" onsubmit="return confirm('Are you sure you want to save the changes?');">
        <div id="jsoneditor" style="width: 100%; height: 70vh;"></div>
        <br />
        @if (User.IsInRole("Admin"))
        {
            <button class="btn btn-primary" type="submit">Save Changes</button>
        }
        <input type="hidden" name="newcontent" id="newcontent" value="" />
    </form>

    <script>
    window.onload = function () {
        // create the editor
        const container = document.getElementById("jsoneditor");
        const options = {
            mode: 'code',
            modes: ['code', 'form', 'text', 'tree', 'view'], // allowed modes
            onChangeText: function (jsonString) {
                $("#newcontent").val(jsonString);
            },
            autocomplete: {
                getOptions: function () {
                    return [@Html.Raw(MqttHomeWeb.Controllers.EditorController.GetAutocompleteList())];
                }
            }
        };
        const editor = new JSONEditor(container, options);

        @{
            if (!string.IsNullOrEmpty(ViewBag.FileContent))
            {
                <text>
                editor.set(@Html.Raw(ViewBag.FileContent))
                </text>
            }
        }
    };
    </script>

}

@section Scripts{
    <link href="https://cdnjs.cloudflare.com/ajax/libs/jsoneditor/7.0.4/jsoneditor.min.css" rel="stylesheet" type="text/css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jsoneditor/7.0.4/jsoneditor.min.js"></script>
}