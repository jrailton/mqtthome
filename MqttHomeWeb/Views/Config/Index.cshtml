@model MqttHome.Config.AppSettings

@{
    ViewData["Title"] = "Settings";
}

<h2>Settings</h2>

<hr />
<div class="row">
    <form asp-action="Update">

        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

        <div class="col-md-6">
            <strong>MQTT Brokers</strong>

            <table id="mqtt-brokers" class="table table-striped table-condensed">
                <thead>
                    <tr>
                        <th>I.P. Address/Hostname</th>
                        <th>Port</th>
                        <th>Name</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="hidden" id="mqtt-template">
                        <td>@Html.TextBoxBootstrap("mqtt-IpAddress", "")</td>
                        <td>@Html.TextBoxBootstrap("mqtt-Port", "1883")</td>
                        <td>@Html.TextBoxBootstrap("mqtt-Name", "")</td>
                        <td><button type="button" class="btn btn-xs btn-danger" onclick="$(this).parents('tr').remove();">Remove</button></td>
                    </tr>
                    @foreach (var broker in (Model.MqttBrokers ?? new List<MqttHome.Config.MqttBroker>()))
                    {
                        <tr>
                            <td>@Html.TextBoxBootstrap("mqtt-IpAddress", broker.IpAddress)</td>
                            <td>@Html.TextBoxBootstrap("mqtt-Port", broker.Port)</td>
                            <td>@Html.TextBoxBootstrap("mqtt-Name", broker.Name)</td>
                            <td><button type="button" class="btn btn-xs btn-danger" onclick="$(this).parents('tr').remove();">Remove</button></td>
                        </tr>
                    }
                </tbody>
                <tfoot>
                    <tr>
                        <td colspan="4">
                            <button type="button" class="btn btn-xs btn-success" onclick="$('#mqtt-template').clone().removeClass('hidden').appendTo('#mqtt-brokers tbody');">Add New MQTT Broker</button>
                        </td>
                    </tr>
                </tfoot>
            </table>

            <div class="form-group">
                <label asp-for="InfluxDbUrl" class="control-label"></label>
                <input asp-for="InfluxDbUrl" class="form-control" />
                <span asp-validation-for="InfluxDbUrl" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="InfluxDbDatabase" class="control-label"></label>
                <input asp-for="InfluxDbDatabase" class="form-control" />
                <span asp-validation-for="InfluxDbDatabase" class="text-danger"></span>
            </div>

            @Html.CheckboxBootstrap("InfluxDbEnabled", Model.InfluxDbEnabled, "Influx DB Enabled")
            @Html.CheckboxBootstrap("SaveAllSensorValuesToDatabaseEveryTime", Model.SaveAllSensorValuesToDatabaseEveryTime, "Save All Sensor Values To Database Every Time")
            @Html.CheckboxBootstrap("RuleEngineEnabled", Model.RuleEngineEnabled, "Rule Engine Enabled")

        </div>
        <div class="col-md-6">

            <div class="form-group">
                <label asp-for="Longitude" class="control-label"></label>
                <input asp-for="Longitude" class="form-control" />
                <span asp-validation-for="Longitude" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Latitude" class="control-label"></label>
                <input asp-for="Latitude" class="form-control" />
                <span asp-validation-for="Latitude" class="text-danger"></span>
            </div>
            <div id="map" class="map"></div>
            <div class="form-group">
                <label asp-for="GoogleAppId" class="control-label"></label>
                <input asp-for="GoogleAppId" class="form-control" />
                <span asp-validation-for="GoogleAppId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="GoogleAppSecret" class="control-label"></label>
                <input asp-for="GoogleAppSecret" class="form-control" />
                <span asp-validation-for="GoogleAppSecret" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="BaseUrl" class="control-label"></label>
                <input asp-for="BaseUrl" class="form-control" />
                <span asp-validation-for="BaseUrl" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PushPublicKey" class="control-label"></label>
                <input asp-for="PushPublicKey" class="form-control" />
                <span asp-validation-for="PushPublicKey" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PushPrivateKey" class="control-label"></label>
                <input asp-for="PushPrivateKey" class="form-control" />
                <span asp-validation-for="PushPrivateKey" class="text-danger"></span>
            </div>
            @Html.CheckboxBootstrap("Debug", Model.Debug, "Debugging Enabled")
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
                <button class="btn btn-link" type="button" onclick="history.go(-1);">Back</button>
            </div>
        </div>
    </form>
</div>

<script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCqF_nHqonqBBIWcRAw2U5Hm9sQ7iZgULQ&callback=initMap"></script>
<script type="text/javascript">
    function initMap () {
        var myLatLng = { lat: @Model.Latitude, lng: @Model.Longitude};

        var map = new google.maps.Map(document.getElementById('map'), {
            zoom: 14,
            center: myLatLng,
            scrollwheel: true
        });

        var marker = new google.maps.Marker({
            position: myLatLng,
            map: map,
            title: 'Home',
            draggable: true
        });

        google.maps.event.addListener(marker, 'dragend', function (evt) {
            $("#Latitude").val(evt.latLng.lat().toFixed(3));
            $("#Longitude").val(evt.latLng.lng().toFixed(3));
        });
    }
</script>